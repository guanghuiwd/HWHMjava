继承！（面向对象三大特性是：封装,继承,多态 ）
相同的特征用同一个类表示。关系到继承。继承要产生一些关系，子类具有父类方法，还追加一些方法。
public class ZI extends FU{}  父类：基类  子类：派生类
继承提高了代码的复用性，提高代码的维护性。耦合性增强。
如果A是B的一种，A可以继承B。有这个内在关系。
对一个变量，现在方法内部找，再在子类中找，最后在父类中找。（不考虑父亲的父亲
访问本类中成员变量：this.age / 访问父类的成员变量：super.age  super.成员方法（） 访问父类成员方法
创建对象。就是new （new对象的来历）
子类初始化之前，默认都会先完成父类的初始化。每一个子类构造方法第一句默认都是super（）
继承中构造方法的访问特点：默认访问父类无参构造方法。父类中没有无参构造方法时，我们自己提供一个。public Fu（）{}
//构造方法是一种特殊的方法，它是一个~与类同名~且返回值类型为同名类类型的方法。 
对象的创建就是通过构造方法来完成，其功能主要是完成对象的初始化。 当类实例化一个对象时会自动调用构造方法。 构造方法和其他方法一样也可以重载。
继承中成员方法的访问特点：子可找父，当时，先子后父。想要父时super.XXX();
方法重写：在父子类中，子类使用。用注解@Override来检验
类中成员方法：访问修饰符，public /默认（空） /private ，依次权限变小。
private父类中方法不能被重写。/ 子类权限仅大于等于父类，正确
类只能单类继承。  /多层继承ok
所有类中构造方法 /成员方法都要有（）小括号。 如 public void teach(){
一旦我们在子类中写了带参的构造方法，系统不会提供无参构造方法。 

我们建包：包是文件夹，对类分类管理  //package com.it;
import com.itheima02.Student; 就可以跨包码代码
可以带包写，是前缀一样。但麻烦。  alt + enter 会根据搜索全自动导包
修饰符：
权限修饰符 ：public 默认 protected private //不同包无关类 不同包子类 包内子类无关类 同一个类中
状态修饰符：final 最终态   static 静态
final method()/xxx()   final int/xxx   final class  不能重写 不能再赋值 不能继承
final修饰局部变量： final修饰引用类型时  是说地址值不能变（地址中的内容还是可以变化的）
static修饰成员方法和成员变量。  static是共享的意思  被类的所有对象共享。 对static变量推荐通过类名调用
非静态的成员方法，有无static都可访问    静态成员方法：只可访问静态成员
模块-src-包-类-一变量两方法 or psvm
